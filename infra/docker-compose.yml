version: "3.9"

services:
  database:
    image: postgres:14-alpine
    restart: always
    user: root
    container_name: "database"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DB_ROOT_PASSWORD}
    expose:
      - 5432
    networks:
      web:
  backend:
    image: workplace-reservation4_backend:latest
    container_name: backend
    depends_on:
      - database
    restart: always
    environment:
      - JWT_TOKEN_GENERATOR_SECRET_KEY=${ENV_JWT_TOKEN_GENERATOR_SECRET_KEY}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - PRIMARY_BACKEND_DOMAIN=${PRIMARY_BACKEND_DOMAIN}
    expose:
      - 8080
    labels:
      caddy: ${BACKEND_DOMAINS}
      caddy.reverse.proxy: "{{upstreams 8080}}"
    networks:
      - web
  frontend:
    image: workplace-reservation4_frontend:latest
    container_name: frontend
    restart: always
    environment:
      - PRIMARY_FRONTEND_DOMAIN=${PRIMARY_FRONTEND_DOMAIN}
      - PRIMARY_BACKEND_DOMAIN=${PRIMARY_BACKEND_DOMAIN}
    expose:
      - 80
    labels:
      caddy: ${FRONTEND_DOMAINS}
      caddy.reverse_proxy: "{{upstreams 80}}"
    networks:
      - web
volumes:
  postgres-db:
networks:
  web:
    external: true