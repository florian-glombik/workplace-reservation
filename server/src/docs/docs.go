// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/offices": {
            "get": {
                "tags": [
                    "offices"
                ],
                "summary": "Returns all offices",
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offices"
                ],
                "summary": "Create a new office",
                "responses": {}
            }
        },
        "/offices/delete": {
            "delete": {
                "tags": [
                    "offices"
                ],
                "responses": {}
            }
        },
        "/offices/edit/:officeId": {
            "patch": {
                "tags": [
                    "offices"
                ],
                "responses": {}
            }
        },
        "/offices/office-id": {
            "get": {
                "tags": [
                    "offices"
                ],
                "summary": "Returns office for supplied ID",
                "responses": {}
            }
        },
        "/reservations/recurring": {
            "get": {
                "tags": [
                    "reservation"
                ],
                "summary": "Returns recurring reservations of authenticated user",
                "responses": {}
            },
            "post": {
                "tags": [
                    "reservation"
                ],
                "summary": "Adds a recurring reservation",
                "responses": {}
            },
            "delete": {
                "tags": [
                    "reservation"
                ],
                "summary": "Deletes recurring reservation",
                "responses": {}
            }
        },
        "/reservations/recurring/all-users": {
            "get": {
                "tags": [
                    "reservation"
                ],
                "summary": "Returns reoccurring reservations of all users",
                "responses": {}
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Get user information by id if logged in",
                "responses": {}
            },
            "post": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TODO",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TODO",
                        "name": "password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TODO",
                        "name": "username",
                        "in": "path"
                    }
                ],
                "responses": {}
            }
        },
        "/users/all-available": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "responses": {}
            }
        },
        "/users/edit": {
            "patch": {
                "tags": [
                    "accounts"
                ],
                "responses": {}
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Login with existing user",
                "responses": {}
            }
        },
        "/workplace/:workplaceId": {
            "patch": {
                "tags": [
                    "workplaces"
                ],
                "summary": "Updating a workplace",
                "responses": {}
            }
        },
        "/workplace/create": {
            "post": {
                "tags": [
                    "workplaces"
                ],
                "summary": "Creating a new workplace",
                "responses": {}
            }
        },
        "/workplace/reservation": {
            "delete": {
                "tags": [
                    "reservation"
                ],
                "summary": "Deletes a reservation",
                "responses": {}
            }
        },
        "/workplace/reserve": {
            "post": {
                "tags": [
                    "reservation"
                ],
                "summary": "Reserving a workplace for the requested timespan",
                "responses": {}
            }
        },
        "/workplaces": {
            "get": {
                "tags": [
                    "workplaces"
                ],
                "summary": "Returns all workplaces with reservations in the requested timespan and the linked office",
                "responses": {}
            }
        },
        "/workplaces/:workplaceId": {
            "delete": {
                "tags": [
                    "workplaces"
                ],
                "responses": {}
            }
        },
        "/workplaces/names": {
            "get": {
                "tags": [
                    "workplaces"
                ],
                "summary": "Returns the names of all workplaces",
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Workplace Reservation API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
